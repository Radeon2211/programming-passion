{"version":3,"sources":["images/logo.png","components/UI/Main/Main.module.scss","components/UI/Button/Button.js","components/Navigation/SignedOutLinks/SignedOutLinks.js","components/Navigation/Navbar/Navbar.js","components/UI/Main/Main.js","containers/Auth/SignIn.js","containers/Auth/SignUp.js","containers/Home/Home.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js","components/Navigation/Navbar/Navbar.module.scss","containers/Home/Home.module.scss","components/UI/Button/Button.module.scss"],"names":["module","exports","Button","props","btnClasses","classes","size","fill","className","join","children","SignedOutLinks","to","Navbar","HeadingLink","Heading","src","logo","alt","Logo","NavList","Main","SignIn","Component","SignUp","Home","ButtonBox","LoginCaption","LoginLink","App","path","component","Boolean","window","location","hostname","match","rootReducer","combineReducers","firestore","firestoreReducer","firebase","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","reduxDevToolsEnhancer","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirestore","getFirebase","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","presence","sessions","AuthIsLoaded","auth","useSelector","state","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.135f00c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.28f46ac1.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1Pt9h\"};","import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = (props) => {\r\n  const btnClasses = [classes.Button, classes[props.size], classes[props.fill]];\r\n\r\n  return (\r\n    <button className={btnClasses.join(' ')}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst SignedOutLinks = () => (\r\n  <Fragment>\r\n    <li>\r\n      <Link to=\"/signin\">\r\n        <Button\r\n          size=\"Small\"\r\n          fill=\"Empty\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </Link>\r\n    </li>\r\n    <li>\r\n      <Link to=\"/signup\">\r\n        <Button\r\n          size=\"Small\"\r\n          fill=\"Filled\"\r\n        >\r\n          Sign up\r\n        </Button>\r\n      </Link>\r\n    </li>\r\n  </Fragment>\r\n);\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport classes from './Navbar.module.scss';\r\nimport logo from '../../../images/logo.png';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from '../SignedInLinks/SignedInLinks';\r\nimport SignedOutLinks from '../SignedOutLinks/SignedOutLinks';\r\n\r\nconst Navbar = () => (\r\n  <div className={classes.Navbar}>\r\n    <Link to=\"/\" className={classes.HeadingLink}>\r\n      <h2 className={classes.Heading}>Programming Passion</h2>\r\n      <img src={logo} alt=\"Programming Passion\" className={classes.Logo} />\r\n    </Link>\r\n    <nav>\r\n      <ul className={classes.NavList}>\r\n        <SignedOutLinks />\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './Main.module.scss';\r\n\r\nconst Main = (props) => (\r\n  <main className={classes.Main}>\r\n    {props.children}\r\n  </main>\r\n);\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n  render () {\r\n    return (\r\n      <h1>SignIn</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass SignUp extends Component {\r\n  render () {\r\n    return (\r\n      <h1>SignUp</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport classes from './Home.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../components/UI/Button/Button';\r\n\r\nconst Home = () => (\r\n  <div className={classes.Home}>\r\n    <h1 className={classes.Heading}>\r\n      <span>Get smarter about programming</span>\r\n      <span>and share the knowledge</span>\r\n    </h1>\r\n    <div className={classes.ButtonBox}>\r\n      <Link to=\"/signup\">\r\n        <Button\r\n          size=\"Big\"\r\n          fill=\"Filled\"\r\n        >\r\n          Join for free\r\n        </Button>\r\n      </Link>\r\n      <span className={classes.LoginCaption}>\r\n        Already have an account?\r\n        <Link to=\"/signin\" className={classes.LoginLink}>Login</Link>\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;","import React, { Component, Fragment } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Navbar from './components/Navigation/Navbar/Navbar';\nimport Main from './components/UI/Main/Main';\nimport SignIn from './containers/Auth/SignIn';\nimport SignUp from './containers/Auth/SignUp';\nimport Home from './containers/Home/Home';\n\nclass App extends Component {\n  render () {\n    return (\n      <Fragment>\n        <Navbar />\n        <Main>\n          <Switch>\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/\" component={Home} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Main>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAQbLCUuLuZPobLEPnWKjFUKd_owxQ1SPA\",\r\n  authDomain: \"programming-passion.firebaseapp.com\",\r\n  databaseURL: \"https://programming-passion.firebaseio.com\",\r\n  projectId: \"programming-passion\",\r\n  storageBucket: \"programming-passion.appspot.com\",\r\n  messagingSenderId: \"30593414768\",\r\n  appId: \"1:30593414768:web:3d8e313ed9aa2d7768e6b5\",\r\n  measurementId: \"G-RGNY6VBHS1\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './store/reducers/rootReducer';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\n// TODO - REMOVE USER AGENT CHECK BELOW\nconst reduxDevToolsEnhancer = (process.env.NODE_ENV === 'development' && !navigator.userAgent.match(/Android/i) ) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst store = createStore(rootReducer, reduxDevToolsEnhancer(\n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n      reduxFirestore(fbConfig)\n    )\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: {\n    ...fbConfig,\n    ...rrfConfig,\n  },\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users',\n  presence: 'presence',\n  sessions: 'sessions',\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return <div className=\"center\">Loading...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1WCBj\",\"Heading\":\"Navbar_Heading__J667p\",\"Logo\":\"Navbar_Logo__1CQAb\",\"HeadingLink\":\"Navbar_HeadingLink__3PD3r\",\"NavList\":\"Navbar_NavList__1bKOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__2by4c\",\"Heading\":\"Home_Heading__33pEW\",\"ButtonBox\":\"Home_ButtonBox__W7Ys3\",\"LoginCaption\":\"Home_LoginCaption__1wTP5\",\"LoginLink\":\"Home_LoginLink__1cOt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Empty\":\"Button_Empty__PtQWd\",\"Filled\":\"Button_Filled__26nBj\",\"Small\":\"Button_Small__21qcT\",\"Big\":\"Button_Big__3vXRl\"};"],"sourceRoot":""}